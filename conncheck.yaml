apiVersion: v1
kind: Namespace
metadata:
  name: conncheck
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: conncheck-controller
  namespace: conncheck
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: conncheck-controller
rules:
- verbs: [list]
  resources: [pods, nodes]
  apiGroups: [""]
- verbs: [create, get, patch]
  resources: [deployments]
  apiGroups: ["apps"]
- verbs: [get]
  resources: [pods, pods/log]
  apiGroups: [""]
- verbs: [get]
  resources: [daemonsets]
  apiGroups: ["apps"]
- verbs: [get]
  resources: [services]
  apiGroups: [""]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: conncheck-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: conncheck-controller
subjects:
- kind: ServiceAccount
  name: conncheck-controller
  namespace: conncheck
---
apiVersion: v1
kind: Pod
metadata:
  name: conncheck-controller
  namespace: conncheck
spec:
  hostNetwork: true
  dnsPolicy: ClusterFirstWithHostNet
  restartPolicy: Never
  serviceAccountName: conncheck-controller
  containers:
  - image: weibeld/k8s-conncheck-controller
    name: conncheck-controller
    imagePullPolicy: Always
    volumeMounts:
      - name: kubelet-conf
        mountPath: /etc/kubernetes/kubelet.conf
  volumes:
    - name: kubelet-conf
      hostPath:
        path: /etc/kubernetes/kubelet.conf
        type: File
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: conncheck-prober
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prober
  template:
    metadata:
      labels:
        app: prober
    spec:
      containers:
      - image: weibeld/k8s-conncheck-prober
        name: k8s-conncheck-prober
        imagePullPolicy: Always
        env:
          - name: SELF_POD_IP
            valueFrom:
              fieldRef:
               fieldPath: status.podIP
          - name: SELF_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: SELF_NODE_NAME
            valueFrom:
              fieldRef:
               fieldPath: spec.nodeName
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: conncheck-prober-host-network
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prober-host-network
  template:
    metadata:
      labels:
        app: prober-host-network
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - image: weibeld/k8s-conncheck-prober
        name: k8s-conncheck-prober
        imagePullPolicy: Always
        env:
          - name: SELF_POD_IP
            valueFrom:
              fieldRef:
               fieldPath: status.podIP
          - name: SELF_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: SELF_NODE_NAME
            valueFrom:
              fieldRef:
               fieldPath: spec.nodeName
---
apiVersion: v1
kind: Service
metadata:
  name: conncheck-service
  namespace: conncheck
spec:
  selector:
    app: conncheck-target
  ports:
  - port: 1024
    targetPort: 1024
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: conncheck-target
  namespace: conncheck
spec:
  selector:
    matchLabels:
      app: conncheck-target
  template:
    metadata:
      labels:
        app: conncheck-target
    spec:
      containers:
      - image: weibeld/k8s-conncheck-target
        name: conncheck-target
