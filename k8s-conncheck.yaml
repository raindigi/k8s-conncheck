apiVersion: v1
kind: Namespace
metadata:
  name: k8s-conncheck
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-conncheck
  namespace: k8s-conncheck
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-conncheck
rules:
- verbs: [get]
  resources: [daemonsets]
  apiGroups: [apps, extensions]
- verbs: [list]
  resources: [pods, nodes]
  apiGroups: [""]
- verbs: [get]
  resources: [services]
  apiGroups: [""]
- verbs: [create, get]
  resources: [replicasets]
  apiGroups: [apps, extensions]
- verbs: [delete]
  resources: [pods]
  apiGroups: [""]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-conncheck
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8s-conncheck
subjects:
- kind: ServiceAccount
  name: k8s-conncheck
  namespace: k8s-conncheck
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: init
  namespace: k8s-conncheck
spec:
  replicas: 1
  selector:
    matchLabels:
      app: init
  template:
    metadata:
      labels:
        app: init
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: k8s-conncheck
      containers:
        - image: weibeld/k8s-conncheck-init
          name: k8s-conncheck-init
          imagePullPolicy: Always
          securityContext:
            privileged: true
---
apiVersion: v1
kind: Service
metadata:
  name: target-service
  namespace: k8s-conncheck
spec:
  selector:
    app: target
  ports:
  - port: 1024
    targetPort: 1024
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: target
  namespace: k8s-conncheck
spec:
  selector:
    matchLabels:
      app: target
  template:
    metadata:
      labels:
        app: target
    spec:
      containers:
      - image: weibeld/k8s-conncheck-target
        name: k8s-conncheck-target
